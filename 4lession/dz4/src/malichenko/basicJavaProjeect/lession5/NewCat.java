package malichenko.basicJavaProjeect.lession5;
import malichenko.basicJavaProjeect.lession4.Cat;

public class NewCat extends Cat {

//конструктор для нового кота с аппетитом и сытостью
    public NewCat(String _name, double _appetite){
        super(_name);
        if (_appetite <= 10) { //10 это самая большая миска, если у кота аппетит меньше:
            this.appetite = _appetite;  //1.У каждого кота есть аппетит, т.е. количество еды, которое он съедает за один раз;
        } else { //если колличество еды съедаемое котом больше максимального обема самой большой миски....
            System.out.println("Ваш " + this.name + " НАГЛЫЙ ОБЖОРА! мы посодили его на строгую диету не больше 1 целой миски за раз!");
            this.appetite = 10; //устанавливаем коту максимально возможной аппетит
        }
        this.fullness = false; //5. Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны).
    }

//1. Класс кота из прошлого ДЗ расширить функционалом потребления пищи. У каждого кота есть аппетит, т.е. количество еды, которое он съедает за один раз;
    public void eat(Bowl bowlName) {
        if(this.appetite < bowlName.getAmountEat()){    // 4. Предусмотрите проверку, при которой в миске не может получиться отрицательного количества еды (например, в миске 10 единиц еды, а кот пытается съесть 15); если аппетит данного кота меньше остатка еды в миске тогда кормится и убавляет
            bowlName.setFilling(- this.appetite);   //3. Метод из первого пункта ДЗ должен взаимодействовать с миской, т.е., конкретный кот ест из конкретной миски, уменьшая объём еды в ней;
            this.fullness = true;   //5. Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны). Если коту удалось поесть (хватило еды), сытость = true; Считаем, что если коту мало еды в тарелке, то он её просто не трогает, то есть не может быть наполовину сыт (это сделано для упрощения логики программы);
            System.out.println(this.name + " накормлен - " + this.fullness + ". В миске осталось " + bowlName.getAmountEat() + " единиц еды");
        }else {
            System.out.println(this.name + " не накормлен - В миске " + bowlName.getBowlName() +" мало еды, кот голодный и злой) Наполнили миску на 10 единиц");   //7. Когда еда в тарелке кончается, нужно оповещать об этом и наполнять её едой.
            bowlName.setFilling(10);    //наполняем миску на 10 едениц
            bowlName.setFilling(- this.appetite);   // вычитаем из миски то что съел этот кот
            this.fullness = true;   //меняем свойство кота на сытый и довольный!
            System.out.println(this.name + " накормлен - " + this.fullness + ". В миске осталось " + bowlName.getAmountEat() + " единиц еды");    //6.  попросить всех котов покушать из этой тарелки и потом вывести информацию о сытости котов в консоль;
        }
    }
}


